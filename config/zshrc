export ZSH=/home/docker/.oh-my-zsh

ZSH_THEME="evan"

plugins=(git golang zsh-syntax-highlighting zsh-autosuggestions dotenv)

source $ZSH/oh-my-zsh.sh

bindkey -v

export LANG=en_US.UTF-8
export EDITOR="vim"
export SHELL="/bin/zsh"
export PATH="$PATH:/app/bin"

alias gomt="go mod tidy"
alias gomv="go mod vendor"
alias tn="tmux new-session -c '$PWD'"
alias ta="tmux at"

gnb () {
  name="$@"
  name=${name:gs/ /_}
  name=${name:gs/:/}
  echo "Create branch $name [y/N]?"
  read -r -s -k 1 COMMAND
  if [ "$COMMAND" = "y" ]
  then
    git checkout master
    git pull -v
    git checkout -b $name
  else
    echo "abort."
  fi
}

guo () {
  local b="$(git_current_branch)"
  echo "git pull origin ${b:=$1} --rebase"
  git pull origin "${b:=$1}" --rebase
}

ggpi () {
  local b="$(git_current_branch)"
  if [ "$b" = "master" ]
  then
    echo "Push to $b branch [y/N]?"
    read -r -s -k 1 COMMAND
    if [ "$COMMAND" != "y" ]
    then
      echo "abort."
      exit
    fi
  fi

  echo "git push origin \"${b:=$1}\""
}

ggfi () {
  local b="$(git_current_branch)"
  if [ "$b" = "master" ]
  then
    echo "Push to $b branch with force [y/N]?"
    read -r -s -k 1 COMMAND
    if [ "$COMMAND" != "y" ]
    then
      echo "abort."
      exit
    fi
  fi

  echo "git push --force origin \"${b:=$1}\""
}

ERROR_COLOR='\033[0;91m'
INFO_COLOR='\033[0;96m'
NO_COLOR='\033[0m' # No Color

tart () {
  ts=$(date "+%Y%m%d-%H%M%S")
  echo -e "${ERROR_COLOR}tar czvf ${1}-${ts}.tgz ${1}${NO_COLOR}"
  tar czvf "${1}-${ts}.tgz" "${1}"
  echo -e "${INFO_COLOR}Done!${NO_COLOR}"
}

[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

export NODE_VERSION=v14.17.1
export PATH=$HOME/.nvm/versions/node/$NODE_VERSION/bin:$PATH

eval "$(starship init zsh)"
